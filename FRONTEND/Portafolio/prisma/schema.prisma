generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["auth", "orders", "products"]
}

model addresses {
  id                                           String    @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  user_id                                      String    @db.Uuid
  address_line1                                String    @db.VarChar(255)
  address_line2                                String?   @db.VarChar(255)
  city                                         String    @db.VarChar(100)
  state                                        String    @db.VarChar(100)
  postal_code                                  String    @db.VarChar(20)
  country                                      String?   @default("Mâ€šxico") @db.VarChar(100)
  is_default                                   Boolean?  @default(false)
  created_at                                   DateTime? @default(now()) @db.Timestamptz(6)
  updated_at                                   DateTime? @default(now()) @db.Timestamptz(6)
  users                                        users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  orders_orders_billing_address_idToaddresses  orders[]  @relation("orders_billing_address_idToaddresses")
  orders_orders_shipping_address_idToaddresses orders[]  @relation("orders_shipping_address_idToaddresses")

  @@schema("auth")
}

model subscriptions {
  id              String    @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  email           String    @unique @db.VarChar(255)
  is_active       Boolean?  @default(true)
  subscribed_at   DateTime? @default(now()) @db.Timestamptz(6)
  unsubscribed_at DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

model users {
  id            String      @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  email         String      @unique @db.VarChar(255)
  password_hash String      @db.VarChar(255)
  first_name    String      @db.VarChar(100)
  last_name     String      @db.VarChar(100)
  phone         String?     @db.VarChar(20)
  created_at    DateTime?   @default(now()) @db.Timestamptz(6)
  updated_at    DateTime?   @default(now()) @db.Timestamptz(6)
  last_login    DateTime?   @db.Timestamptz(6)
  is_admin      Boolean?    @default(false)
  is_active     Boolean?    @default(true)
  addresses     addresses[]
  carts         carts[]
  orders        orders[]
  reviews       reviews[]
  wishlists     wishlists[]

  @@schema("auth")
}

model cart_items {
  id               String            @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  cart_id          String            @db.Uuid
  product_id       String            @db.Uuid
  variant_id       String?           @db.Uuid
  quantity         Int
  created_at       DateTime?         @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?         @default(now()) @db.Timestamptz(6)
  carts            carts             @relation(fields: [cart_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products         products          @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product_variants product_variants? @relation(fields: [variant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("orders")
}

model carts {
  id         String       @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  user_id    String?      @db.Uuid
  session_id String?      @db.VarChar(255)
  created_at DateTime?    @default(now()) @db.Timestamptz(6)
  updated_at DateTime?    @default(now()) @db.Timestamptz(6)
  expires_at DateTime?    @db.Timestamptz(6)
  cart_items cart_items[]
  users      users?       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("orders")
}

model coupons {
  id                   String    @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  code                 String    @unique @db.VarChar(50)
  description          String?
  discount_type        String    @db.VarChar(20)
  discount_value       Decimal   @db.Decimal(10, 2)
  minimum_order_amount Decimal?  @default(0) @db.Decimal(10, 2)
  usage_limit          Int?
  usage_count          Int?      @default(0)
  is_active            Boolean?  @default(true)
  starts_at            DateTime? @db.Timestamptz(6)
  expires_at           DateTime? @db.Timestamptz(6)
  created_at           DateTime? @default(now()) @db.Timestamptz(6)
  updated_at           DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("orders")
}

model order_items {
  id               String            @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  order_id         String            @db.Uuid
  product_id       String            @db.Uuid
  variant_id       String?           @db.Uuid
  quantity         Int
  price            Decimal           @db.Decimal(10, 2)
  discount         Decimal?          @default(0) @db.Decimal(10, 2)
  total            Decimal           @db.Decimal(10, 2)
  created_at       DateTime?         @default(now()) @db.Timestamptz(6)
  orders           orders            @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products         products          @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  product_variants product_variants? @relation(fields: [variant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("orders")
}

model order_statuses {
  id          String   @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  name        String   @db.VarChar(50)
  description String?
  color       String?  @default("#000000") @db.VarChar(7)
  is_active   Boolean? @default(true)
  sort_order  Int?     @default(0)
  orders      orders[]

  @@schema("orders")
}

model orders {
  id                                              String         @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  order_number                                    String         @unique @db.VarChar(50)
  user_id                                         String?        @db.Uuid
  status_id                                       String         @db.Uuid
  subtotal                                        Decimal        @db.Decimal(10, 2)
  tax                                             Decimal        @db.Decimal(10, 2)
  shipping_cost                                   Decimal        @db.Decimal(10, 2)
  discount                                        Decimal?       @default(0) @db.Decimal(10, 2)
  total                                           Decimal        @db.Decimal(10, 2)
  shipping_address_id                             String?        @db.Uuid
  billing_address_id                              String?        @db.Uuid
  payment_method                                  String?        @db.VarChar(50)
  payment_status                                  String?        @default("pending") @db.VarChar(50)
  shipping_method                                 String?        @db.VarChar(50)
  tracking_number                                 String?        @db.VarChar(100)
  notes                                           String?
  created_at                                      DateTime?      @default(now()) @db.Timestamptz(6)
  updated_at                                      DateTime?      @default(now()) @db.Timestamptz(6)
  completed_at                                    DateTime?      @db.Timestamptz(6)
  cancelled_at                                    DateTime?      @db.Timestamptz(6)
  cancellation_reason                             String?
  order_items                                     order_items[]
  addresses_orders_billing_address_idToaddresses  addresses?     @relation("orders_billing_address_idToaddresses", fields: [billing_address_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  addresses_orders_shipping_address_idToaddresses addresses?     @relation("orders_shipping_address_idToaddresses", fields: [shipping_address_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_statuses                                  order_statuses @relation(fields: [status_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users                                           users?         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  transactions                                    transactions[]
  reviews                                         reviews[]

  @@schema("orders")
}

model payment_methods {
  id         String    @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  name       String    @db.VarChar(100)
  is_active  Boolean?  @default(true)
  sort_order Int?      @default(0)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("orders")
}

model shipping_methods {
  id          String    @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  name        String    @db.VarChar(100)
  description String?
  price       Decimal   @db.Decimal(10, 2)
  is_active   Boolean?  @default(true)
  sort_order  Int?      @default(0)
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)

  @@schema("orders")
}

model transactions {
  id                String    @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  order_id          String    @db.Uuid
  transaction_type  String    @db.VarChar(50)
  payment_method    String    @db.VarChar(50)
  amount            Decimal   @db.Decimal(10, 2)
  status            String    @db.VarChar(50)
  gateway_reference String?   @db.VarChar(255)
  gateway_response  String?
  created_at        DateTime? @default(now()) @db.Timestamptz(6)
  orders            orders    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("orders")
}

model attribute_values {
  id                       String                     @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  attribute_id             String                     @db.Uuid
  value                    String                     @db.VarChar(100)
  display_value            String                     @db.VarChar(100)
  color_hex                String?                    @db.VarChar(7)
  created_at               DateTime?                  @default(now()) @db.Timestamptz(6)
  attributes               attributes                 @relation(fields: [attribute_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  variant_attribute_values variant_attribute_values[]

  @@schema("products")
}

model attributes {
  id               String             @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  name             String             @db.VarChar(100)
  display_name     String             @db.VarChar(100)
  type             String             @db.VarChar(50)
  created_at       DateTime?          @default(now()) @db.Timestamptz(6)
  updated_at       DateTime?          @default(now()) @db.Timestamptz(6)
  attribute_values attribute_values[]

  @@schema("products")
}

model brands {
  id          String     @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  name        String     @db.VarChar(100)
  slug        String     @unique @db.VarChar(100)
  description String?
  logo_url    String?    @db.VarChar(255)
  is_active   Boolean?   @default(true)
  created_at  DateTime?  @default(now()) @db.Timestamptz(6)
  updated_at  DateTime?  @default(now()) @db.Timestamptz(6)
  products    products[]

  @@schema("products")
}

model categories {
  id                 String               @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  name               String               @db.VarChar(100)
  slug               String               @unique @db.VarChar(100)
  description        String?
  parent_id          String?              @db.Uuid
  is_active          Boolean?             @default(true)
  created_at         DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?            @default(now()) @db.Timestamptz(6)
  categories         categories?          @relation("categoriesTocategories", fields: [parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  other_categories   categories[]         @relation("categoriesTocategories")
  product_categories product_categories[]
  products           products[]

  @@schema("products")
}

model product_categories {
  product_id  String     @db.Uuid
  category_id String     @db.Uuid
  categories  categories @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products    products   @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([product_id, category_id])
  @@schema("products")
}

model product_images {
  id         String    @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  product_id String    @db.Uuid
  image_url  String    @db.VarChar(255)
  alt_text   String?   @db.VarChar(255)
  is_primary Boolean?  @default(false)
  sort_order Int?      @default(0)
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  products   products  @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("products")
}

model product_variants {
  id                       String                     @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  product_id               String                     @db.Uuid
  sku                      String?                    @unique @db.VarChar(100)
  barcode                  String?                    @db.VarChar(100)
  price                    Decimal?                   @db.Decimal(10, 2)
  compare_at_price         Decimal?                   @db.Decimal(10, 2)
  cost_price               Decimal?                   @db.Decimal(10, 2)
  stock_quantity           Int?                       @default(0)
  weight                   Decimal?                   @db.Decimal(10, 2)
  weight_unit              String?                    @default("kg") @db.VarChar(10)
  is_active                Boolean?                   @default(true)
  created_at               DateTime?                  @default(now()) @db.Timestamptz(6)
  updated_at               DateTime?                  @default(now()) @db.Timestamptz(6)
  cart_items               cart_items[]
  order_items              order_items[]
  products                 products                   @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  variant_attribute_values variant_attribute_values[]
  variant_images           variant_images[]

  @@schema("products")
}

model products {
  id                 String               @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  name               String               @db.VarChar(255)
  slug               String               @unique @db.VarChar(255)
  description        String?
  price              Decimal              @db.Decimal(10, 2)
  compare_at_price   Decimal?             @db.Decimal(10, 2)
  cost_price         Decimal?             @db.Decimal(10, 2)
  sku                String?              @unique @db.VarChar(100)
  barcode            String?              @db.VarChar(100)
  brand_id           String?              @db.Uuid
  main_category_id   String               @db.Uuid
  stock_quantity     Int?                 @default(0)
  weight             Decimal?             @db.Decimal(10, 2)
  weight_unit        String?              @default("kg") @db.VarChar(10)
  is_active          Boolean?             @default(true)
  is_featured        Boolean?             @default(false)
  meta_title         String?              @db.VarChar(255)
  meta_description   String?
  created_at         DateTime?            @default(now()) @db.Timestamptz(6)
  updated_at         DateTime?            @default(now()) @db.Timestamptz(6)
  published_at       DateTime?            @db.Timestamptz(6)
  cart_items         cart_items[]
  order_items        order_items[]
  product_categories product_categories[]
  product_images     product_images[]
  product_variants   product_variants[]
  brands             brands?              @relation(fields: [brand_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  categories         categories           @relation(fields: [main_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  reviews            reviews[]
  wishlist_items     wishlist_items[]

  @@schema("products")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model reviews {
  id          String    @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  product_id  String    @db.Uuid
  user_id     String    @db.Uuid
  order_id    String?   @db.Uuid
  rating      Int
  title       String?   @db.VarChar(255)
  content     String?
  is_approved Boolean?  @default(false)
  created_at  DateTime? @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @default(now()) @db.Timestamptz(6)
  orders      orders?   @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  products    products  @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users       users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@schema("products")
}

model variant_attribute_values {
  variant_id         String           @db.Uuid
  attribute_value_id String           @db.Uuid
  attribute_values   attribute_values @relation(fields: [attribute_value_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  product_variants   product_variants @relation(fields: [variant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([variant_id, attribute_value_id])
  @@schema("products")
}

model variant_images {
  id               String           @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  variant_id       String           @db.Uuid
  image_url        String           @db.VarChar(255)
  alt_text         String?          @db.VarChar(255)
  is_primary       Boolean?         @default(false)
  sort_order       Int?             @default(0)
  created_at       DateTime?        @default(now()) @db.Timestamptz(6)
  product_variants product_variants @relation(fields: [variant_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("products")
}

model wishlist_items {
  wishlist_id String    @db.Uuid
  product_id  String    @db.Uuid
  added_at    DateTime? @default(now()) @db.Timestamptz(6)
  products    products  @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  wishlists   wishlists @relation(fields: [wishlist_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([wishlist_id, product_id])
  @@schema("products")
}

model wishlists {
  id             String           @id @default(dbgenerated("public.uuid_generate_v4()")) @db.Uuid
  user_id        String           @db.Uuid
  name           String?          @default("Default") @db.VarChar(100)
  is_public      Boolean?         @default(false)
  created_at     DateTime?        @default(now()) @db.Timestamptz(6)
  updated_at     DateTime?        @default(now()) @db.Timestamptz(6)
  wishlist_items wishlist_items[]
  users          users            @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("products")
}
